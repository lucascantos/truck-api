service: truck-api

provider:
  name: aws
  runtime: python3.8
  region: us-east-1

  stage: ${opt:stage,'dev'}
  environment:
      STAGE_NAME: ${self:provider.stage}

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
        - s3:HeadObject
      Resource: 
        - "arn:aws:s3:::${self:custom.USER_DB}"
        - "arn:aws:s3:::${self:custom.USER_DB}/*"
        - "arn:aws:s3:::${self:custom.TERMINAL_DB}"
        - "arn:aws:s3:::${self:custom.TERMINAL_DB}/*"

# you can add packaging information here

plugins:
  - serverless-python-requirements
  - serverless-dotenv-plugin
custom:
  myStage: ${opt:stage, self:provider.stage}
  dotenv:
    path: .env
  pythonRequirements:
    dockerizePip: non-linux
  USER_DB: ${env:S3_BUCKET}-${self:provider.stage}-users
  TERMINAL_DB: ${env:S3_BUCKET}-${self:provider.stage}-terminals

# you can add CloudFormation resource templates here
resources:
  Resources:
    UserDB:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.USER_DB}
        AccessControl:  Private
    TerminalDB:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.TERMINAL_DB}
        AccessControl:  Private


functions:
  users_info:
    handler: handler.hello
    events:
      - http:
          path: users/
          method: get
          request:
          parameters:
            queryParams:
            - name: "latitude"
              description: "Latitude"
              required: true

  new_user:
    handler: handler.hello
    events:
      - http:
          path: users/
          method: post

  user_info:
    handler: handler.hello
    events:
      - http:
          path: users/{id}
          method: get
          request: 
            parameters: 
              paths: 
                id: true

  user_update:
    handler: handler.hello
    events:
      - http:
          path: users/{id}
          method: post
          request: 
            parameters: 
              paths: 
                id: true

  terminal_list:
    handler: handler.hello
    events:
      - http:
          path: terminals/{id}
          method: get
          request: 
            parameters: 
              paths: 
                id: true